name: CI workflow

on:    
  pull_request:
    types:
      - opened
    branches: [ staging ]

env:
    ENDPOINT: products
    REPOSITORY_NAME: ${{ github.event.repository.name }}
    
jobs:
    coverage:
        name: Scan Sonarcloud
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
            with:
              fetch-depth: 0  
          - name: Set up JDK 11
            uses: actions/setup-java@v1
            with:
              java-version: 11
          - name: Cache SonarCloud packages
            uses: actions/cache@v1
            with:
              path: ~/.sonar/cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
          - name: Cache Maven packages
            uses: actions/cache@v1
            with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
              restore-keys: ${{ runner.os }}-m2
          - name: Build and analyze
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            run: mvn verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=obligatoriodevops -Dsonar.projectKey=obligatorioDevOps_${{ env.REPOSITORY_NAME }}

    build_and_test:
        name: Build and Test
        runs-on: ubuntu-latest
        needs: [ coverage ]
                   
        steps:
        - uses: actions/checkout@v2
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11

        - name: Cache the Maven packages to speed up build
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2      

        - name: Build and test project with Maven
          run: mvn -B package --file pom.xml
          
        - name: Login a Docker Hub  
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build and push a Docker Hub de ${{ env.REPOSITORY_NAME }}
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            tags: ${{ secrets.DOCKER_REPO }}:latest
            
        - name: Run and test docker image
          run: | 
                docker run -d --name ${{ env.REPOSITORY_NAME }} -p 8080:8080 ${{ secrets.DOCKER_REPO }}:latest
                sleep 30
                curl -s -X GET "http://127.0.0.1:8080/${{ env.ENDPOINT }}/123"
                
        - name: HTTP status test
          uses: gerdemann/http-status-code@1.0.0
          with:
            url: http://127.0.0.1:8080/${{ env.ENDPOINT }}/123
            code: 200 
            timeout: 60 
            interval: 10

    automatic-merge:
      name: Merge to staging
      runs-on: ubuntu-latest
      needs: [ build_and_test ]
      
      steps:
      - name: Checkout
        uses: actions/checkout@v2                

      - name: development -> staging
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: develop
          target_branch: staging
          github_token: ${{ env.GITHUB_TOKEN }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
