name: Maven CI/CD

on:
  push:
    branches: [ main ]
  
jobs:
  Sonarcloud:
    name: Scan Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=obligatoriodevops  -Dsonar.projectKey=obligatorioDevOps_products-service-example


    
  build_and_test:
    runs-on: ubuntu-latest

               
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      

    - name: Build and test project with Maven
      run: mvn -B package --file pom.xml
    - name: Login a Docker Hub  
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push a Docker Hub de products-service-example
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_REPO }}:latest

  test-docker-image:
    name: Test docker image 
    runs-on: ubuntu-latest
    needs: [build_and_test, Sonarcloud]

    steps:
      - uses: actions/checkout@v2
      - name: Run docker image
        run: docker run -d --name products-service-example --env "APP_ARGS=http://127.0.0.1:8080 http://127.0.0.1:8080 http://127.0.0.1:8080" -p 8080:8080 ${{ secrets.DOCKER_REPO }}:latest
      

     

